worker_processes 1;

events { worker_connections 1024; }

http {
  sendfile on;
  # error_log /var/log/nginx/error.log debug;

  gzip              on;
  gzip_http_version 1.0;
  gzip_proxied      any;
  gzip_min_length   500;
  gzip_disable      "MSIE [1-6]\.";
  gzip_types        text/plain text/xml text/css
                    text/comma-separated-values
                    text/javascript
                    application/x-javascript
                    application/atom+xml;

  # # List of application servers
  # upstream api {
  #     least_conn;
  #     server api:3000;
  # }
  #
  # upstream static {
  #     least_conn;
  #     server static:3000;
  # }
  # Configuration for the server
  server {
    # Running port
    listen 8080;
    server_name localhost;
    root /srv;

    location /admin {
      alias /srv/admin;
      include /etc/nginx/mime.types;
      try_files $uri $uri/ /index.html =404;
    }

    # Proxying the connections connections
    location /api/v1 {
      rewrite /api/v1/(.*) /$1 break;

      proxy_pass         http://api:3000;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Host $server_name;
    }

    location /api/v1/upload {
      rewrite /api/v1/(.*) /$1 break;

      client_max_body_size 0;
      proxy_request_buffering off;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_redirect off;
      proxy_pass http://api:3000;
    }

    location /static {
      proxy_pass http://static:3000;

      expires 1y;
      add_header Cache-Control "public";

      # proxy_cache static_cache;
      # proxy_cache_bypass  $http_cache_control;
      # proxy_cache_key "$proxy_host$uri$is_args$args";
      # proxy_cache_valid 30d;
      # proxy_cache_valid any 10s;
      # proxy_cache_lock on;
      # proxy_http_version 1.1;
      # add_header X-Proxy-Cache $upstream_cache_status;

      rewrite /static/(.*) /$1 break;
    }
  }
}
