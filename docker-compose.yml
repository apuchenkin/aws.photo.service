version: '3'

services:
  nginx:
    image: nginx
    depends_on:
      - admin
      - client
      - api
      - static
    volumes:
      - admin:/srv/admin:ro
      - client:/srv/client:ro
      - ./etc/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: always
    ports:
      - "${EXTERNAL_PORT:-80}:80"
    networks:
      default:
        aliases:
          - nginx

  admin:
    build:
      context: .
      dockerfile: ./admin/Dockerfile
      args:
        BASENAME: /admin
        API_ENDPOINT: /api/v1
        STATIC_ENDPOINT: /static
    volumes:
      - admin:/srv/admin/dist

  api:
    depends_on:
      - db
    build: ./node-server
    restart: always
    volumes:
      - static:/static
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_USER: aws-photo
      DB_PASSWORD: aws-photo
      STATIC_DIR: /static
    entrypoint: ./scripts/wait.sh node dist/app.js
    networks:
      default:
        aliases:
          - api

  db:
    image: mysql
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: aws-photo
      MYSQL_DATABASE: aws-photo
      MYSQL_USER: aws-photo
      MYSQL_PASSWORD: aws-photo
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --init-connect='SET NAMES UTF8;'
    networks:
      default:
        aliases:
          - db

  static:
    build:
      context: .
      dockerfile: ./static-server/Dockerfile
    restart: always
    volumes:
      - static:/static:ro
    environment:
      STATIC_DIR: /static
    networks:
      default:
        aliases:
          - static

  client:
    depends_on:
      - api
      - static
    build:
      context: .
      dockerfile: ./client/Dockerfile
      args:
        HOSTNAME: ${HOSTNAME:-http://localhost}
        API_ENDPOINT: /api/v1
        STATIC_ENDPOINT: /static
    restart: always
    volumes:
      - client:/srv/client/dist/static
    environment:
      API_ENDPOINT: http://nginx/api/v1
      STATIC_ENDPOINT: /static
      HOSTNAME: ${HOSTNAME:-http://localhost}
    networks:
      default:
        aliases:
          - client

volumes:
  db_data:
  static:
  admin:
  client:
